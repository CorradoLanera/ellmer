% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chat.R
\name{new_chat_openai}
\alias{new_chat_openai}
\alias{Chat}
\title{Create a chatbot that speaks to an OpenAI compatible endpoint}
\usage{
new_chat_openai(
  system_prompt = NULL,
  base_url = "https://api.openai.com/v1",
  api_key = openai_key(),
  model = "gpt-4o-mini",
  quiet = FALSE
)
}
\arguments{
\item{system_prompt}{A system prompt to set the behavior of the assistant.}

\item{base_url}{The base URL to the endpoint; the default uses ChatGPT.}

\item{api_key}{The API key to use for authentication. You generally should
not supply this directly, but instead set the \code{OPENAI_API_KEY} environment
variable.}

\item{model}{The model to use for the chat; defaults to GPT-4o mini.}

\item{quiet}{If \code{TRUE} does not print output as its received.}
}
\description{
This function returns an R6 object that takes care of managing the state
associated with the chat; i.e. it records the messages that you send to the
server, and the messages that you receive back. If you register a tool
(aka an R function), it also takes care of the tool loop.
}
\examples{
\dontshow{if (elmer:::openai_key_exists()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
chat <- new_chat_openai()
chat$chat("
  What is the difference between a tibble and a data frame?
  Answer with a bulleted list
")

chat <- new_chat_openai()
chat$register_tool(
  name = "rnorm",
  description = "Drawn numbers from a random normal distribution",
  arguments = list(
    tool_arg(
      "n",
      type = "integer",
      description = "The number of observations. Must be a positive integer."
    ),
    tool_arg(
      "mean",
      type = "number",
      description = "The mean value of the distribution."
    ),
    tool_arg(
      "sd",
      type = "number",
      description = "The standard deviation of the distribution. Must be a non-negative number."
    )
  )
)
chat$chat("
  Give me five numbers from a random normal distribution.
  Briefly explain your work.
")
\dontshow{\}) # examplesIf}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Chat-new}{\code{Chat$new()}}
\item \href{#method-Chat-chat}{\code{Chat$chat()}}
\item \href{#method-Chat-register_tool}{\code{Chat$register_tool()}}
\item \href{#method-Chat-clone}{\code{Chat$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Chat-new"></a>}}
\if{latex}{\out{\hypertarget{method-Chat-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Chat$new(base_url, model, api_key, system_prompt, quiet = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Chat-chat"></a>}}
\if{latex}{\out{\hypertarget{method-Chat-chat}{}}}
\subsection{Method \code{chat()}}{
Submit text to the chatbot.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Chat$chat(text, stream = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{text}}{The text to send to the chatbot}

\item{\code{stream}}{Whether to stream the response or not.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Chat-register_tool"></a>}}
\if{latex}{\out{\hypertarget{method-Chat-register_tool}{}}}
\subsection{Method \code{register_tool()}}{
Register a tool (an R function) that the chatbot can use.
If the chatbot decides to use the function, elmer will automatically
call it and submit the results back.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Chat$register_tool(name, description, arguments, strict = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the function.}

\item{\code{description}}{A detailed description of what the function does.
Generally, the more information that you can provide here, the better.}

\item{\code{arguments}}{A list of arguments that the function accepts.
Should be a list of objects created by \code{\link[=tool_arg]{tool_arg()}}.}

\item{\code{strict}}{Should the argument definition be strictly enforced?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Chat-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Chat-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Chat$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
